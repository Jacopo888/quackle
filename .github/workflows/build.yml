# Continuous integration and pull request validation builds
name: CI builds
on:
  push:
    branches: [ master, actions_ci ]
  pull_request:
    branches: [ master, actions_ci ]

jobs:
  job:
    name: ${{ matrix.name }}-build
    runs-on: ${{ matrix.os }}
    env: ${{ matrix.env }}

    strategy:
      fail-fast: false
      matrix:
        name: [macos-latest-clang++, ubuntu-20.04-clang, ubuntu-18.04-g++, ubuntu-20.04-g++, windows-latest-cl]
        include:
          - name: macos-latest-clang++
            os: macos-latest
            env:
              CXX: clang++
              CC: clang
              GH_QT_VER: 5.15.1
          - name: macos-10.13-clang++
            os: macos-10.13
            env:
              CXX: clang++
              CC: clang
              GH_QT_VER: 5.15.1
          - name: ubuntu-20.04-clang
            os: ubuntu-20.04
            env:
              CXX: clang++
              CC: clang
              GH_QT_VER: 5.15.1
          - name: ubuntu-18.04-g++
            os: ubuntu-18.04
            env:
              CXX: g++
              CC: gcc
              GH_QT_VER: 5.15.1
          - name: ubuntu-20.04-g++
            os: ubuntu-20.04
            env:
              CXX: g++
              CC: gcc
              GH_QT_VER: 5.15.1
          - name: windows-x64-cl
            os: windows-latest
            env:
              CXX: cl
              C: cl
              VS160COMNTOOLS: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools
              GH_QT_ARCH: win64_msvc2019_64
              GH_QT_VER: 5.15.1
              GH_MSVC_ARCH: x64
          - name: windows-x86-cl
            os: windows-latest
            env:
              CXX: cl
              C: cl
              VS160COMNTOOLS: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools
              GH_QT_ARCH: win32_msvc2019
              GH_QT_VER: 5.15.1
              GH_MSVC_ARCH: x86

    steps:
    - name: Check out sources
      uses: actions/checkout@v2

    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@latest

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ env.GH_QT_VER }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ env.GH_QT_VER }}
        arch: ${{ env.GH_QT_ARCH }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Add MSVC to path
      uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ env.GH_MSVC_ARCH }}

    - name: Generate and build - Unix
      run: |
        mkdir build
        cd build
        cmake -G Ninja ../quacker
        ninja -v
